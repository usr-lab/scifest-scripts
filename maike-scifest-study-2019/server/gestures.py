def strong_nod(motion):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.04, 0.6, 1, 1.28, 1.76, 2.12, 2.6, 3, 3.6, 4, 4.52, 5.2])
	keys.append([[-0.217376, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.0349066, [3, -0.186667, 0], [3, 0.133333, 0]], [-0.198968, [3, -0.133333, 0], [3, 0.0933333, 0]], [0.106465, [3, -0.0933333, 0], [3, 0.16, 0]], [-0.371755, [3, -0.16, 0], [3, 0.12, 0]], [0.0244346, [3, -0.12, 0], [3, 0.16, 0]], [-0.293215, [3, -0.16, 0], [3, 0.133333, 0]], [0.16057, [3, -0.133333, 0], [3, 0.2, 0]], [-0.31765, [3, -0.2, 0], [3, 0.133333, 0]], [0.150098, [3, -0.133333, 0], [3, 0.173333, 0]], [-0.237365, [3, -0.173333, 0.00662126], [3, 0.226667, -0.00865857]], [-0.246023, [3, -0.226667, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.04, 5.2])
	keys.append([[-0.0157424, [3, -0.0133333, 0], [3, 1.72, 0]], [-0.0157424, [3, -1.72, 0], [3, 0, 0]]])

	names.append("HipPitch")
	times.append([0.04, 0.6, 1, 1.76, 2.12, 3, 4, 5.2])
	keys.append([[-0.0297996, [3, -0.0133333, 0], [3, 0.186667, 0]], [0.101229, [3, -0.186667, -0.00733038], [3, 0.133333, 0.00523598]], [0.106465, [3, -0.133333, 0], [3, 0.253333, 0]], [-0.296706, [3, -0.253333, 0], [3, 0.12, 0]], [-0.230383, [3, -0.12, -0.0302336], [3, 0.293333, 0.0739044]], [0.015708, [3, -0.293333, 0], [3, 0.333333, 0]], [-0.371755, [3, -0.333333, 0], [3, 0.4, 0]], [-0.00662075, [3, -0.4, 0], [3, 0, 0]]])

	names.append("HipRoll")
	times.append([0.04, 5.2])
	keys.append([[0.0170192, [3, -0.0133333, 0], [3, 1.72, 0]], [0.0170192, [3, -1.72, 0], [3, 0, 0]]])

	names.append("KneePitch")
	times.append([0.04, 1, 2.12, 3, 4, 5.2])
	keys.append([[-0.0110783, [3, -0.0133333, 0], [3, 0.32, 0]], [-0.113446, [3, -0.32, 0], [3, 0.373333, 0]], [-0.0523599, [3, -0.373333, -0.022154], [3, 0.293333, 0.0174068]], [0.00523599, [3, -0.293333, 0], [3, 0.333333, 0]], [-0.0331613, [3, -0.333333, 0.00381558], [3, 0.4, -0.0045787]], [-0.03774, [3, -0.4, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.04, 1, 2.12, 3, 5.2])
	keys.append([[-0.514188, [3, -0.0133333, 0], [3, 0.32, 0]], [-0.205949, [3, -0.32, 0], [3, 0.373333, 0]], [-0.345575, [3, -0.373333, 0], [3, 0.293333, 0]], [-0.0977384, [3, -0.293333, 0], [3, 0.733333, 0]], [-0.514188, [3, -0.733333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.04, 5.2])
	keys.append([[-1.21712, [3, -0.0133333, 0], [3, 1.72, 0]], [-1.21712, [3, -1.72, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.04, 1.76, 4, 5.2])
	keys.append([[0.600896, [3, -0.0133333, 0], [3, 0.573333, 0]], [0.31, [3, -0.573333, 0], [3, 0.746667, 0]], [0.42, [3, -0.746667, -0.0631402], [3, 0.4, 0.0338251]], [0.600896, [3, -0.4, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.04, 5.2])
	keys.append([[1.5608, [3, -0.0133333, 0], [3, 1.72, 0]], [1.5608, [3, -1.72, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.04, 5.2])
	keys.append([[0.155002, [3, -0.0133333, 0], [3, 1.72, 0]], [0.166252, [3, -1.72, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.04, 5.2])
	keys.append([[0.0156157, [3, -0.0133333, 0], [3, 1.72, 0]], [0.0156157, [3, -1.72, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.04, 1, 2.12, 3, 5.2])
	keys.append([[0.51175, [3, -0.0133333, 0], [3, 0.32, 0]], [0.287979, [3, -0.32, 0], [3, 0.373333, 0]], [0.363028, [3, -0.373333, 0], [3, 0.293333, 0]], [0.102974, [3, -0.293333, 0], [3, 0.733333, 0]], [0.51175, [3, -0.733333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.04, 5.2])
	keys.append([[1.21205, [3, -0.0133333, 0], [3, 1.72, 0]], [1.21205, [3, -1.72, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.04, 1.76, 4, 5.2])
	keys.append([[0.600838, [3, -0.0133333, 0], [3, 0.573333, 0]], [0.43, [3, -0.573333, 0.0363166], [3, 0.746667, -0.0472961]], [0.35, [3, -0.746667, 0], [3, 0.4, 0]], [0.600838, [3, -0.4, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.04, 5.2])
	keys.append([[1.56586, [3, -0.0133333, 0], [3, 1.72, 0]], [1.56586, [3, -1.72, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.04, 5.2])
	keys.append([[-0.153255, [3, -0.0133333, 0], [3, 1.72, 0]], [-0.163295, [3, -1.72, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.04, 5.2])
	keys.append([[-0.0197388, [3, -0.0133333, 0], [3, 1.72, 0]], [-0.0197388, [3, -1.72, 0], [3, 0, 0]]])

	motion.post.angleInterpolationBezier(names, times, keys)
	
def nod(motion):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.04, 0.6, 1, 1.28, 1.76, 2.12, 2.6, 3, 3.6, 4.12, 4.52, 5.2])
	keys.append([[-0.217376, [3, -0.0133333, 0], [3, 0.186667, 0]], [-0.267035, [3, -0.186667, 0], [3, 0.133333, 0]], [-0.0401426, [3, -0.133333, 0], [3, 0.0933333, 0]], [-0.270526, [3, -0.0933333, 0], [3, 0.16, 0]], [0.00174533, [3, -0.16, 0], [3, 0.12, 0]], [-0.204204, [3, -0.12, 0], [3, 0.16, 0]], [-0.0279253, [3, -0.16, 0], [3, 0.133333, 0]], [-0.190241, [3, -0.133333, 0], [3, 0.2, 0]], [-0.0122173, [3, -0.2, 0], [3, 0.173333, 0]], [-0.235619, [3, -0.173333, 0], [3, 0.133333, 0]], [0.0349066, [3, -0.133333, 0], [3, 0.226667, 0]], [-0.246023, [3, -0.226667, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.04, 5.2])
	keys.append([[-0.0157424, [3, -0.0133333, 0], [3, 1.72, 0]], [-0.0157424, [3, -1.72, 0], [3, 0, 0]]])

	names.append("HipPitch")
	times.append([0.04, 1, 2.12, 3, 4.12, 5.2])
	keys.append([[-0.0297996, [3, -0.0133333, 0], [3, 0.32, 0]], [0.106465, [3, -0.32, 0], [3, 0.373333, 0]], [-0.00872665, [3, -0.373333, 0.0417017], [3, 0.293333, -0.0327656]], [-0.116937, [3, -0.293333, 0], [3, 0.373333, 0]], [-0.00349066, [3, -0.373333, 0], [3, 0.36, 0]], [-0.00662075, [3, -0.36, 0], [3, 0, 0]]])

	names.append("HipRoll")
	times.append([0.04, 5.2])
	keys.append([[0.0170192, [3, -0.0133333, 0], [3, 1.72, 0]], [0.0170192, [3, -1.72, 0], [3, 0, 0]]])

	names.append("KneePitch")
	times.append([0.04, 1, 2.12, 3, 4.12, 5.2])
	keys.append([[-0.0110783, [3, -0.0133333, 0], [3, 0.32, 0]], [-0.113446, [3, -0.32, 0], [3, 0.373333, 0]], [-0.0523599, [3, -0.373333, -0.022154], [3, 0.293333, 0.0174068]], [0.00523599, [3, -0.293333, 0], [3, 0.373333, 0]], [-0.0331613, [3, -0.373333, 0.00474828], [3, 0.36, -0.0045787]], [-0.03774, [3, -0.36, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.04, 1, 2.12, 3, 5.2])
	keys.append([[-0.514188, [3, -0.0133333, 0], [3, 0.32, 0]], [-0.205949, [3, -0.32, 0], [3, 0.373333, 0]], [-0.345575, [3, -0.373333, 0], [3, 0.293333, 0]], [-0.0977384, [3, -0.293333, 0], [3, 0.733333, 0]], [-0.514188, [3, -0.733333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.04, 5.2])
	keys.append([[-1.21712, [3, -0.0133333, 0], [3, 1.72, 0]], [-1.21712, [3, -1.72, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.04, 5.2])
	keys.append([[0.600896, [3, -0.0133333, 0], [3, 1.72, 0]], [0.600896, [3, -1.72, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.04, 5.2])
	keys.append([[1.5608, [3, -0.0133333, 0], [3, 1.72, 0]], [1.5608, [3, -1.72, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.04, 5.2])
	keys.append([[0.155002, [3, -0.0133333, 0], [3, 1.72, 0]], [0.166252, [3, -1.72, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.04, 5.2])
	keys.append([[0.0156157, [3, -0.0133333, 0], [3, 1.72, 0]], [0.0156157, [3, -1.72, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.04, 1, 2.12, 3, 5.2])
	keys.append([[0.51175, [3, -0.0133333, 0], [3, 0.32, 0]], [0.287979, [3, -0.32, 0], [3, 0.373333, 0]], [0.363028, [3, -0.373333, 0], [3, 0.293333, 0]], [0.102974, [3, -0.293333, 0], [3, 0.733333, 0]], [0.51175, [3, -0.733333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.04, 5.2])
	keys.append([[1.21205, [3, -0.0133333, 0], [3, 1.72, 0]], [1.21205, [3, -1.72, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.04, 5.2])
	keys.append([[0.600838, [3, -0.0133333, 0], [3, 1.72, 0]], [0.600838, [3, -1.72, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.04, 5.2])
	keys.append([[1.56586, [3, -0.0133333, 0], [3, 1.72, 0]], [1.56586, [3, -1.72, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.04, 5.2])
	keys.append([[-0.153255, [3, -0.0133333, 0], [3, 1.72, 0]], [-0.163295, [3, -1.72, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.04, 5.2])
	keys.append([[-0.0197388, [3, -0.0133333, 0], [3, 1.72, 0]], [-0.0197388, [3, -1.72, 0], [3, 0, 0]]])

	motion.post.angleInterpolationBezier(names, times, keys)

def light_head_shake(motion):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.04, 0.76, 4.4, 5.16])
	keys.append([[-0.183371, [3, -0.0133333, 0], [3, 0.24, 0]], [0.00349066, [3, -0.24, 0], [3, 1.21333, 0]], [-0.00486847, [3, -1.21333, 0.00835913], [3, 0.253333, -0.00174531]], [-0.199753, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.04, 0.76, 0.96, 1.32, 1.76, 2.12, 2.8, 3.4, 3.84, 4.4, 5.16])
	keys.append([[-0.00147216, [3, -0.0133333, 0], [3, 0.24, 0]], [0, [3, -0.24, 0], [3, 0.0666667, 0]], [-0.0959931, [3, -0.0666667, 0.0342833], [3, 0.12, -0.0617099]], [-0.287979, [3, -0.12, 0], [3, 0.146667, 0]], [0.267035, [3, -0.146667, 0], [3, 0.12, 0]], [-0.223402, [3, -0.12, 0], [3, 0.226667, 0]], [0.267035, [3, -0.226667, 0], [3, 0.2, 0]], [-0.338594, [3, -0.2, 0], [3, 0.146667, 0]], [0.190241, [3, -0.146667, 0], [3, 0.186667, 0]], [0.0017961, [3, -0.186667, 0], [3, 0.253333, 0]], [0.0017961, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("HipPitch")
	times.append([0.04, 0.76, 4.4, 5.16])
	keys.append([[-0.058013, [3, -0.0133333, 0], [3, 0.24, 0]], [-0.176278, [3, -0.24, 0], [3, 1.21333, 0]], [-0.112425, [3, -1.21333, -0.0354324], [3, 0.253333, 0.00739798]], [-0.0477871, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("HipRoll")
	times.append([0.04, 4.4, 5.16])
	keys.append([[-0.00148574, [3, -0.0133333, 0], [3, 1.45333, 0]], [-0.00148574, [3, -1.45333, 0], [3, 0.253333, 0]], [-0.00148574, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("KneePitch")
	times.append([0.04, 0.76, 4.4, 5.16])
	keys.append([[-0.00923328, [3, -0.0133333, 0], [3, 0.24, 0]], [-0.185005, [3, -0.24, 0], [3, 1.21333, 0]], [-0.0303895, [3, -1.21333, -0.0475124], [3, 0.253333, 0.00992017]], [-0.0127072, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.04, 0.96, 4.4, 5.16])
	keys.append([[-0.509905, [3, -0.0133333, 0], [3, 0.306667, 0]], [-0.616101, [3, -0.306667, 0], [3, 1.14667, 0]], [-0.616101, [3, -1.14667, 0], [3, 0.253333, 0]], [-0.52103, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.04, 0.96, 4.4, 5.16])
	keys.append([[-1.23019, [3, -0.0133333, 0], [3, 0.306667, 0]], [-0.66148, [3, -0.306667, 0], [3, 1.14667, 0]], [-0.66148, [3, -1.14667, 0], [3, 0.253333, 0]], [-1.23019, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.04, 0.96, 4.4, 5.16])
	keys.append([[0.592073, [3, -0.0133333, 0], [3, 0.306667, 0]], [0.02, [3, -0.306667, 0], [3, 1.14667, 0]], [0.0215677, [3, -1.14667, -0.0015677], [3, 0.253333, 0.000346353]], [0.6, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.04, 4.4, 5.16])
	keys.append([[1.54668, [3, -0.0133333, 0], [3, 1.45333, 0]], [1.54697, [3, -1.45333, -0.000291483], [3, 0.253333, 5.0809e-05]], [1.55731, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.04, 0.96, 4.4, 5.16])
	keys.append([[0.151858, [3, -0.0133333, 0], [3, 0.306667, 0]], [0.282743, [3, -0.306667, 0], [3, 1.14667, 0]], [0.151858, [3, -1.14667, 0], [3, 0.253333, 0]], [0.151858, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.04, 4.4, 5.16])
	keys.append([[0.00412009, [3, -0.0133333, 0], [3, 1.45333, 0]], [0.00412009, [3, -1.45333, 0], [3, 0.253333, 0]], [0.00412009, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.04, 0.96, 4.4, 5.16])
	keys.append([[0.505959, [3, -0.0133333, 0], [3, 0.306667, 0]], [0.671952, [3, -0.306667, 0], [3, 1.14667, 0]], [0.647517, [3, -1.14667, 0.0244346], [3, 0.253333, -0.00539835]], [0.516434, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.04, 0.96, 4.4, 5.16])
	keys.append([[1.23978, [3, -0.0133333, 0], [3, 0.306667, 0]], [0.670206, [3, -0.306667, 0], [3, 1.14667, 0]], [0.670206, [3, -1.14667, 0], [3, 0.253333, 0]], [1.22962, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.04, 0.96, 4.4, 5.16])
	keys.append([[0.592073, [3, -0.0133333, 0], [3, 0.306667, 0]], [0.02, [3, -0.306667, 0], [3, 1.14667, 0]], [0.0215677, [3, -1.14667, -0.0015677], [3, 0.253333, 0.000346353]], [0.6, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.04, 4.4, 5.16])
	keys.append([[1.54559, [3, -0.0133333, 0], [3, 1.45333, 0]], [1.54539, [3, -1.45333, 0], [3, 0.253333, 0]], [1.55563, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.04, 0.96, 4.4, 5.16])
	keys.append([[-0.149169, [3, -0.0133333, 0], [3, 0.306667, 0]], [-0.301942, [3, -0.306667, 0], [3, 1.14667, 0]], [-0.149169, [3, -1.14667, 0], [3, 0.253333, 0]], [-0.149169, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.04, 4.4, 5.16])
	keys.append([[-0.00799534, [3, -0.0133333, 0], [3, 1.45333, 0]], [-0.00799534, [3, -1.45333, 0], [3, 0.253333, 0]], [-0.00799534, [3, -0.253333, 0], [3, 0, 0]]])

	motion.post.angleInterpolationBezier(names, times, keys)

def strong_head_shake(motion):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.04, 0.52, 0.88, 1.68, 2.16, 3.04, 3.6, 4.04, 5.4, 6.6])
	keys.append([[-0.20461, [3, -0.0133333, 0], [3, 0.16, 0]], [-0.0401426, [3, -0.16, 0], [3, 0.12, 0]], [-0.261799, [3, -0.12, 0], [3, 0.266667, 0]], [0.141372, [3, -0.266667, -0.111628], [3, 0.16, 0.066977]], [0.274017, [3, -0.16, -0.018088], [3, 0.293333, 0.0331613]], [0.307178, [3, -0.293333, 0], [3, 0.186667, 0]], [0.298451, [3, -0.186667, 0.00872665], [3, 0.146667, -0.00685665]], [0.260054, [3, -0.146667, 0.00753724], [3, 0.453333, -0.0232969]], [0.205949, [3, -0.453333, 0.0541052], [3, 0.4, -0.0477399]], [-0.195981, [3, -0.4, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.04, 0.88, 1.68, 2.16, 2.64, 3.04, 3.6, 4.04, 4.64, 5.4, 6.6])
	keys.append([[0.00385845, [3, -0.0133333, 0], [3, 0.28, 0]], [0.00385845, [3, -0.28, 0], [3, 0.266667, 0]], [0, [3, -0.266667, 0], [3, 0.16, 0]], [0.371755, [3, -0.16, 0], [3, 0.16, 0]], [-0.349066, [3, -0.16, 0], [3, 0.133333, 0]], [0.261799, [3, -0.133333, 0], [3, 0.186667, 0]], [-0.315905, [3, -0.186667, 0], [3, 0.146667, 0]], [0.326377, [3, -0.146667, 0], [3, 0.2, 0]], [-0.101229, [3, -0.2, 0], [3, 0.253333, 0]], [0, [3, -0.253333, -0.0010523], [3, 0.4, 0.00166152]], [0.00166152, [3, -0.4, 0], [3, 0, 0]]])

	names.append("HipPitch")
	times.append([0.04, 0.52, 0.88, 1.16, 1.68, 6.6])
	keys.append([[-0.04416, [3, -0.0133333, 0], [3, 0.16, 0]], [-0.0628318, [3, -0.16, 0], [3, 0.12, 0]], [0.200713, [3, -0.12, -0.0749401], [3, 0.0933333, 0.0582867]], [0.336849, [3, -0.0933333, 0], [3, 0.173333, 0]], [-0.247837, [3, -0.173333, 0], [3, 1.64, 0]], [-0.0511858, [3, -1.64, 0], [3, 0, 0]]])

	names.append("HipRoll")
	times.append([0.04, 0.88, 6.6])
	keys.append([[-0.00477004, [3, -0.0133333, 0], [3, 0.28, 0]], [-0.00477004, [3, -0.28, 0], [3, 1.90667, 0]], [-0.00148574, [3, -1.90667, 0], [3, 0, 0]]])

	names.append("KneePitch")
	times.append([0.04, 0.88, 6.6])
	keys.append([[-0.00816788, [3, -0.0133333, 0], [3, 0.28, 0]], [-0.00816788, [3, -0.28, 0], [3, 1.90667, 0]], [-0.0152838, [3, -1.90667, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.04, 0.52, 0.88, 1.16, 1.68, 5.4, 6.6])
	keys.append([[-0.518775, [3, -0.0133333, 0], [3, 0.16, 0]], [-0.356047, [3, -0.16, 0], [3, 0.12, 0]], [-0.518775, [3, -0.12, 0.0589049], [3, 0.0933333, -0.0458149]], [-0.670206, [3, -0.0933333, 0], [3, 0.173333, 0]], [-0.0715585, [3, -0.173333, 0], [3, 1.24, 0]], [-0.321141, [3, -1.24, 0.111684], [3, 0.4, -0.0360271]], [-0.514692, [3, -0.4, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.04, 0.88, 1.16, 1.68, 6.6])
	keys.append([[-1.23276, [3, -0.0133333, 0], [3, 0.28, 0]], [-1.7017, [3, -0.28, 0.197518], [3, 0.0933333, -0.0658395]], [-2.02284, [3, -0.0933333, 0], [3, 0.173333, 0]], [-1.74882, [3, -0.173333, -0.0252928], [3, 1.64, 0.239308]], [-1.22903, [3, -1.64, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.04, 0.52, 0.88, 1.68, 6.6])
	keys.append([[0.607765, [3, -0.0133333, 0], [3, 0.16, 0]], [0.02, [3, -0.16, 0], [3, 0.12, 0]], [0.607765, [3, -0.12, 0], [3, 0.266667, 0]], [0.02, [3, -0.266667, 0], [3, 1.64, 0]], [0.6, [3, -1.64, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.04, 0.88, 1.68, 6.6])
	keys.append([[1.56456, [3, -0.0133333, 0], [3, 0.28, 0]], [1.24966, [3, -0.28, 0], [3, 0.266667, 0]], [1.51844, [3, -0.266667, -0.00599172], [3, 1.64, 0.0368491]], [1.55529, [3, -1.64, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.04, 0.88, 1.68, 6.6])
	keys.append([[0.146029, [3, -0.0133333, 0], [3, 0.28, 0]], [0.123918, [3, -0.28, 0.00586088], [3, 0.266667, -0.00558179]], [0.111701, [3, -0.266667, 0], [3, 1.64, 0]], [0.14444, [3, -1.64, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.04, 0.88, 1.68, 6.6])
	keys.append([[0.00527524, [3, -0.0133333, 0], [3, 0.28, 0]], [0.00527524, [3, -0.28, 0], [3, 0.266667, 0]], [1.42768, [3, -0.266667, 0], [3, 1.64, 0]], [0.000741847, [3, -1.64, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.04, 0.52, 0.88, 1.16, 1.68, 6.6])
	keys.append([[0.518794, [3, -0.0133333, 0], [3, 0.16, 0]], [0.345575, [3, -0.16, 0], [3, 0.12, 0]], [0.518794, [3, -0.12, -0.0788671], [3, 0.0933333, 0.0613411]], [0.7662, [3, -0.0933333, 0], [3, 0.173333, 0]], [0.00872665, [3, -0.173333, 0], [3, 1.64, 0]], [0.513598, [3, -1.64, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.04, 0.88, 1.16, 6.6])
	keys.append([[1.23241, [3, -0.0133333, 0], [3, 0.28, 0]], [1.84481, [3, -0.28, 0], [3, 0.0933333, 0]], [1.83958, [3, -0.0933333, 0.00523591], [3, 1.81333, -0.101726]], [1.23116, [3, -1.81333, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.04, 0.52, 0.88, 1.68, 6.6])
	keys.append([[0.607258, [3, -0.0133333, 0], [3, 0.16, 0]], [0.02, [3, -0.16, 0], [3, 0.12, 0]], [0.98, [3, -0.12, 0], [3, 0.266667, 0]], [0.02, [3, -0.266667, 0], [3, 1.64, 0]], [0.6, [3, -1.64, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.04, 0.52, 0.88, 1.68, 6.6])
	keys.append([[1.56414, [3, -0.0133333, 0], [3, 0.16, 0]], [1.42593, [3, -0.16, 0.0209438], [3, 0.12, -0.0157079]], [1.41023, [3, -0.12, 0], [3, 0.266667, 0]], [1.50098, [3, -0.266667, -0.00669864], [3, 1.64, 0.0411967]], [1.55391, [3, -1.64, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.04, 0.88, 6.6])
	keys.append([[-0.144749, [3, -0.0133333, 0], [3, 0.28, 0]], [-0.144749, [3, -0.28, 0], [3, 1.90667, 0]], [-0.149169, [3, -1.90667, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.04, 0.88, 1.68, 6.6])
	keys.append([[-0.00102194, [3, -0.0133333, 0], [3, 0.28, 0]], [-0.00102194, [3, -0.28, 0], [3, 0.266667, 0]], [-0.853466, [3, -0.266667, 0], [3, 1.64, 0]], [-0.00239852, [3, -1.64, 0], [3, 0, 0]]])

	motion.post.angleInterpolationBezier(names, times, keys)
	
def annoyed(motion):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.04, 0.52, 0.8, 1.6])
	keys.append([[-0.20461, [3, -0.0133333, 0], [3, 0.16, 0]], [-0.0401426, [3, -0.16, 0], [3, 0.0933333, 0]], [-0.261799, [3, -0.0933333, 0], [3, 0.266667, 0]], [0.141372, [3, -0.266667, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.04, 0.8])
	keys.append([[0.00385845, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.00385845, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("HipPitch")
	times.append([0.04, 0.52, 0.8, 1.6])
	keys.append([[-0.04416, [3, -0.0133333, 0], [3, 0.16, 0]], [-0.0628318, [3, -0.16, 0], [3, 0.0933333, 0]], [0.0488692, [3, -0.0933333, 0], [3, 0.266667, 0]], [-0.0436332, [3, -0.266667, 0], [3, 0, 0]]])

	names.append("HipRoll")
	times.append([0.04, 0.8])
	keys.append([[-0.00477004, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.00477004, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("KneePitch")
	times.append([0.04, 0.8])
	keys.append([[-0.00816788, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.00816788, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.04, 0.52, 0.8, 1.08, 1.6])
	keys.append([[-0.518775, [3, -0.0133333, 0], [3, 0.16, 0]], [-0.356047, [3, -0.16, 0], [3, 0.0933333, 0]], [-0.518775, [3, -0.0933333, 0.0523599], [3, 0.0933333, -0.0523599]], [-0.670206, [3, -0.0933333, 0], [3, 0.173333, 0]], [-0.158825, [3, -0.173333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.04, 0.8, 1.08, 1.6])
	keys.append([[-1.23276, [3, -0.0133333, 0], [3, 0.253333, 0]], [-1.7017, [3, -0.253333, 0.192454], [3, 0.0933333, -0.0709041]], [-2.02284, [3, -0.0933333, 0], [3, 0.173333, 0]], [-1.74882, [3, -0.173333, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.04, 0.8, 1.6])
	keys.append([[0.607765, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.607765, [3, -0.253333, 0], [3, 0.266667, 0]], [0.02, [3, -0.266667, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.04, 0.8, 1.6])
	keys.append([[1.56456, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.24966, [3, -0.253333, 0], [3, 0.266667, 0]], [1.63886, [3, -0.266667, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.04, 0.8, 1.6])
	keys.append([[0.146029, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.123918, [3, -0.253333, 0.00557463], [3, 0.266667, -0.00586803]], [0.111701, [3, -0.266667, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.04, 0.8, 1.6])
	keys.append([[0.00527524, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.00527524, [3, -0.253333, 0], [3, 0.266667, 0]], [0.809833, [3, -0.266667, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.04, 0.52, 0.8, 1.08, 1.6])
	keys.append([[0.518794, [3, -0.0133333, 0], [3, 0.16, 0]], [0.345575, [3, -0.16, 0], [3, 0.0933333, 0]], [0.518794, [3, -0.0933333, -0.0701041], [3, 0.0933333, 0.0701041]], [0.7662, [3, -0.0933333, 0], [3, 0.173333, 0]], [0.204204, [3, -0.173333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.04, 0.8, 1.08])
	keys.append([[1.23241, [3, -0.0133333, 0], [3, 0.253333, 0]], [1.84481, [3, -0.253333, 0], [3, 0.0933333, 0]], [1.83958, [3, -0.0933333, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.04, 0.8, 1.6])
	keys.append([[0.607258, [3, -0.0133333, 0], [3, 0.253333, 0]], [0.98, [3, -0.253333, 0], [3, 0.266667, 0]], [0.02, [3, -0.266667, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.04, 0.52, 0.8, 1.6])
	keys.append([[1.56414, [3, -0.0133333, 0], [3, 0.16, 0]], [1.42593, [3, -0.16, 0.0269278], [3, 0.0933333, -0.0157079]], [1.41023, [3, -0.0933333, 0], [3, 0.266667, 0]], [1.64934, [3, -0.266667, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.04, 0.8])
	keys.append([[-0.144749, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.144749, [3, -0.253333, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.04, 0.8, 1.6])
	keys.append([[-0.00102194, [3, -0.0133333, 0], [3, 0.253333, 0]], [-0.00102194, [3, -0.253333, 0], [3, 0.266667, 0]], [-0.617847, [3, -0.266667, 0], [3, 0, 0]]])


	motion.post.angleInterpolationBezier(names, times, keys)
	
def idle(motion):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[-0.20776, [3, -0.0133333, 0], [3, 0.32, 0]], [-0.190241, [3, -0.32, 0], [3, 0.306667, 0]], [-0.20776, [3, -0.306667, 0], [3, 0.36, 0]], [-0.190241, [3, -0.36, 0], [3, 0.32, 0]], [-0.20776, [3, -0.32, 0], [3, 0.346667, 0]], [-0.190241, [3, -0.346667, 0], [3, 0.32, 0]], [-0.20776, [3, -0.32, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[0.0185211, [3, -0.0133333, 0], [3, 0.32, 0]], [0.0185211, [3, -0.32, 0], [3, 0.306667, 0]], [0.0185211, [3, -0.306667, 0], [3, 0.36, 0]], [0.0185211, [3, -0.36, 0], [3, 0.32, 0]], [0.0185211, [3, -0.32, 0], [3, 0.346667, 0]], [0.0185211, [3, -0.346667, 0], [3, 0.32, 0]], [0.0185211, [3, -0.32, 0], [3, 0, 0]]])

	names.append("HipPitch")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[-0.117574, [3, -0.0133333, 0], [3, 0.32, 0]], [-0.230383, [3, -0.32, 0], [3, 0.306667, 0]], [-0.117574, [3, -0.306667, 0], [3, 0.36, 0]], [-0.228638, [3, -0.36, 0], [3, 0.32, 0]], [-0.117574, [3, -0.32, 0], [3, 0.346667, 0]], [-0.228638, [3, -0.346667, 0], [3, 0.32, 0]], [-0.117574, [3, -0.32, 0], [3, 0, 0]]])

	names.append("HipRoll")
	times.append([0.04, 0.44, 1, 1.36, 1.92, 2.32, 3, 3.4, 3.96, 4.4, 5, 5.36, 5.96])
	keys.append([[0, [3, -0.0133333, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.186667, 0]], [0, [3, -0.186667, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.186667, 0]], [0, [3, -0.186667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.226667, 0]], [0, [3, -0.226667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.186667, 0]], [0, [3, -0.186667, 0], [3, 0.146667, 0]], [0, [3, -0.146667, 0], [3, 0.2, 0]], [0, [3, -0.2, 0], [3, 0.12, 0]], [0, [3, -0.12, 0], [3, 0.2, 0]], [0, [3, -0.2, 0], [3, 0, 0]]])

	names.append("KneePitch")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[0.0156841, [3, -0.0133333, 0], [3, 0.32, 0]], [0.107617, [3, -0.32, 0], [3, 0.306667, 0]], [0.0156841, [3, -0.306667, 0], [3, 0.36, 0]], [0.107617, [3, -0.36, 0], [3, 0.32, 0]], [0.0156841, [3, -0.32, 0], [3, 0.346667, 0]], [0.107617, [3, -0.346667, 0], [3, 0.32, 0]], [0.0156841, [3, -0.32, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.04, 0.44, 1, 1.36, 1.92, 2.32, 3, 3.4, 3.96, 4.4, 5, 5.36, 5.96])
	keys.append([[-0.254818, [3, -0.0133333, 0], [3, 0.133333, 0]], [-0.328122, [3, -0.133333, 0.0189077], [3, 0.186667, -0.0264708]], [-0.390954, [3, -0.186667, 0], [3, 0.12, 0]], [-0.338594, [3, -0.12, -0.0177568], [3, 0.186667, 0.0276217]], [-0.254818, [3, -0.186667, -0.0349551], [3, 0.133333, 0.0249679]], [-0.158825, [3, -0.133333, 0], [3, 0.226667, 0]], [-0.230383, [3, -0.226667, 0.028938], [3, 0.133333, -0.0170223]], [-0.296706, [3, -0.133333, 0], [3, 0.186667, 0]], [-0.254818, [3, -0.186667, -0.0192219], [3, 0.146667, 0.0151029]], [-0.193732, [3, -0.146667, 0], [3, 0.2, 0]], [-0.286234, [3, -0.2, 0.0359974], [3, 0.12, -0.0215984]], [-0.366519, [3, -0.12, 0], [3, 0.2, 0]], [-0.216421, [3, -0.2, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[-1.22918, [3, -0.0133333, 0], [3, 0.32, 0]], [-1.22918, [3, -0.32, 0], [3, 0.306667, 0]], [-1.22918, [3, -0.306667, 0], [3, 0.36, 0]], [-1.22918, [3, -0.36, 0], [3, 0.32, 0]], [-1.22918, [3, -0.32, 0], [3, 0.346667, 0]], [-1.22918, [3, -0.346667, 0], [3, 0.32, 0]], [-1.22918, [3, -0.32, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[0.594822, [3, -0.0133333, 0], [3, 0.32, 0]], [0.594822, [3, -0.32, 0], [3, 0.306667, 0]], [0.594822, [3, -0.306667, 0], [3, 0.36, 0]], [0.594822, [3, -0.36, 0], [3, 0.32, 0]], [0.594822, [3, -0.32, 0], [3, 0.346667, 0]], [0.594822, [3, -0.346667, 0], [3, 0.32, 0]], [0.594822, [3, -0.32, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[1.59349, [3, -0.0133333, 0], [3, 0.32, 0]], [1.50379, [3, -0.32, 0], [3, 0.306667, 0]], [1.59349, [3, -0.306667, 0], [3, 0.36, 0]], [1.50379, [3, -0.36, 0], [3, 0.32, 0]], [1.59349, [3, -0.32, 0], [3, 0.346667, 0]], [1.50379, [3, -0.346667, 0], [3, 0.32, 0]], [1.59349, [3, -0.32, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[0.16057, [3, -0.0133333, 0], [3, 0.32, 0]], [0.166837, [3, -0.32, 0], [3, 0.306667, 0]], [0.16057, [3, -0.306667, 0], [3, 0.36, 0]], [0.166837, [3, -0.36, 0], [3, 0.32, 0]], [0.16057, [3, -0.32, 0], [3, 0.346667, 0]], [0.166837, [3, -0.346667, 0], [3, 0.32, 0]], [0.16057, [3, -0.32, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.04, 1, 1.92, 2.32, 3, 3.96, 4.4, 5, 5.96])
	keys.append([[0.228638, [3, -0.0133333, 0], [3, 0.32, 0]], [0.0150847, [3, -0.32, 0], [3, 0.306667, 0]], [0.242601, [3, -0.306667, -0.0775916], [3, 0.133333, 0.0337355]], [0.349066, [3, -0.133333, 0], [3, 0.226667, 0]], [0.0150847, [3, -0.226667, 0], [3, 0.32, 0]], [0.207694, [3, -0.32, -0.127801], [3, 0.146667, 0.0585754]], [0.574213, [3, -0.146667, 0], [3, 0.2, 0]], [0.0150847, [3, -0.2, 0], [3, 0.32, 0]], [0.363028, [3, -0.32, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.04, 0.44, 1, 1.36, 1.92, 2.32, 3, 3.4, 3.96, 4.4, 5, 5.36, 5.96])
	keys.append([[0.345575, [3, -0.0133333, 0], [3, 0.133333, 0]], [0.324631, [3, -0.133333, 0], [3, 0.186667, 0]], [0.417134, [3, -0.186667, -0.0315171], [3, 0.12, 0.020261]], [0.479966, [3, -0.12, 0], [3, 0.186667, 0]], [0.345575, [3, -0.186667, 0.03767], [3, 0.133333, -0.0269072]], [0.286234, [3, -0.133333, 0], [3, 0.226667, 0]], [0.394444, [3, -0.226667, -0.0344325], [3, 0.133333, 0.0202544]], [0.450295, [3, -0.133333, 0], [3, 0.186667, 0]], [0.357792, [3, -0.186667, 0.0351858], [3, 0.146667, -0.027646]], [0.261799, [3, -0.146667, 0], [3, 0.2, 0]], [0.364774, [3, -0.2, -0.029816], [3, 0.12, 0.0178896]], [0.404916, [3, -0.12, 0], [3, 0.2, 0]], [0.345575, [3, -0.2, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[1.23457, [3, -0.0133333, 0], [3, 0.32, 0]], [1.23457, [3, -0.32, 0], [3, 0.306667, 0]], [1.23457, [3, -0.306667, 0], [3, 0.36, 0]], [1.23457, [3, -0.36, 0], [3, 0.32, 0]], [1.23457, [3, -0.32, 0], [3, 0.346667, 0]], [1.23457, [3, -0.346667, 0], [3, 0.32, 0]], [1.23457, [3, -0.32, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[0.596185, [3, -0.0133333, 0], [3, 0.32, 0]], [0.596185, [3, -0.32, 0], [3, 0.306667, 0]], [0.596185, [3, -0.306667, 0], [3, 0.36, 0]], [0.596185, [3, -0.36, 0], [3, 0.32, 0]], [0.596185, [3, -0.32, 0], [3, 0.346667, 0]], [0.596185, [3, -0.346667, 0], [3, 0.32, 0]], [0.596185, [3, -0.32, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[1.66155, [3, -0.0133333, 0], [3, 0.32, 0]], [1.61094, [3, -0.32, 0], [3, 0.306667, 0]], [1.66155, [3, -0.306667, 0], [3, 0.36, 0]], [1.61094, [3, -0.36, 0], [3, 0.32, 0]], [1.66155, [3, -0.32, 0], [3, 0.346667, 0]], [1.61094, [3, -0.346667, 0], [3, 0.32, 0]], [1.66155, [3, -0.32, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.04, 1, 1.92, 3, 3.96, 5, 5.96])
	keys.append([[-0.172718, [3, -0.0133333, 0], [3, 0.32, 0]], [-0.172718, [3, -0.32, 0], [3, 0.306667, 0]], [-0.172718, [3, -0.306667, 0], [3, 0.36, 0]], [-0.172718, [3, -0.36, 0], [3, 0.32, 0]], [-0.172718, [3, -0.32, 0], [3, 0.346667, 0]], [-0.172718, [3, -0.346667, 0], [3, 0.32, 0]], [-0.172718, [3, -0.32, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.04, 0.44, 1, 1.92, 2.32, 3, 3.96, 4.4, 5, 5.96])
	keys.append([[-0.226893, [3, -0.0133333, 0], [3, 0.133333, 0]], [-0.165806, [3, -0.133333, -0.0299005], [3, 0.186667, 0.0418606]], [-0.0116096, [3, -0.186667, 0], [3, 0.306667, 0]], [-0.0959931, [3, -0.306667, 0.0638016], [3, 0.133333, -0.0277398]], [-0.286234, [3, -0.133333, 0], [3, 0.226667, 0]], [-0.0116096, [3, -0.226667, 0], [3, 0.32, 0]], [-0.246091, [3, -0.32, 0.0695532], [3, 0.146667, -0.0318785]], [-0.315905, [3, -0.146667, 0], [3, 0.2, 0]], [-0.0116096, [3, -0.2, 0], [3, 0.32, 0]], [-0.29147, [3, -0.32, 0], [3, 0, 0]]])

	motion.post.angleInterpolationBezier(names, times, keys)
	
def breath(motion):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.04, 1.08, 2.2, 3.44, 4.6, 5.8, 7, 8])
	keys.append([[-0.205731, [3, -0.0133333, 0], [3, 0.346667, 0]], [-0.287979, [3, -0.346667, 0], [3, 0.373333, 0]], [-0.0977384, [3, -0.373333, 0], [3, 0.413333, 0]], [-0.219911, [3, -0.413333, 0], [3, 0.386667, 0]], [-0.0925025, [3, -0.386667, 0], [3, 0.4, 0]], [-0.268781, [3, -0.4, 0], [3, 0.4, 0]], [-0.146608, [3, -0.4, 0], [3, 0.333333, 0]], [-0.205731, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.04, 8])
	keys.append([[-0.00499766, [3, -0.0133333, 0], [3, 2.65333, 0]], [-0.00542581, [3, -2.65333, 0], [3, 0, 0]]])

	names.append("HipPitch")
	times.append([0.04, 1.08, 2.2, 3.44, 4.6, 5.8, 7, 8])
	keys.append([[-0.0286182, [3, -0.0133333, 0], [3, 0.346667, 0]], [-0.0837758, [3, -0.346667, 0], [3, 0.373333, 0]], [0.00349066, [3, -0.373333, 0], [3, 0.413333, 0]], [-0.0698132, [3, -0.413333, 0], [3, 0.386667, 0]], [0, [3, -0.386667, 0], [3, 0.4, 0]], [-0.1309, [3, -0.4, 0], [3, 0.4, 0]], [-0.015708, [3, -0.4, 0], [3, 0.333333, 0]], [-0.0414414, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("HipRoll")
	times.append([0.04, 8])
	keys.append([[-0.00136429, [3, -0.0133333, 0], [3, 2.65333, 0]], [-0.00136429, [3, -2.65333, 0], [3, 0, 0]]])

	names.append("KneePitch")
	times.append([0.04, 1.08, 4.6, 5.8, 7, 8])
	keys.append([[-0.00724806, [3, -0.0133333, 0], [3, 0.346667, 0]], [-0.0401426, [3, -0.346667, 0], [3, 1.17333, 0]], [-0.0331613, [3, -1.17333, -0.00698132], [3, 0.4, 0.00237999]], [0.020944, [3, -0.4, 0], [3, 0.4, 0]], [-0.015708, [3, -0.4, 0.0026735], [3, 0.333333, -0.00222791]], [-0.0179359, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.04, 1.08, 2.2, 3.44, 4.6, 5.8, 7, 8])
	keys.append([[-0.515705, [3, -0.0133333, 0], [3, 0.346667, 0]], [-0.267035, [3, -0.346667, 0], [3, 0.373333, 0]], [-0.357792, [3, -0.373333, 0], [3, 0.413333, 0]], [-0.244346, [3, -0.413333, 0], [3, 0.386667, 0]], [-0.404916, [3, -0.386667, 0], [3, 0.4, 0]], [-0.303687, [3, -0.4, 0], [3, 0.4, 0]], [-0.511381, [3, -0.4, 0.00518785], [3, 0.333333, -0.00432321]], [-0.515705, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.04, 8])
	keys.append([[-1.23334, [3, -0.0133333, 0], [3, 2.65333, 0]], [-1.23334, [3, -2.65333, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.04, 8])
	keys.append([[0.603383, [3, -0.0133333, 0], [3, 2.65333, 0]], [0.603383, [3, -2.65333, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.04, 8])
	keys.append([[1.55309, [3, -0.0133333, 0], [3, 2.65333, 0]], [1.55309, [3, -2.65333, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.04, 8])
	keys.append([[0.144523, [3, -0.0133333, 0], [3, 2.65333, 0]], [0.144376, [3, -2.65333, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.04, 8])
	keys.append([[0.00150524, [3, -0.0133333, 0], [3, 2.65333, 0]], [0.00150524, [3, -2.65333, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.04, 1.08, 2.2, 3.44, 4.6, 5.8, 7, 8])
	keys.append([[0.516157, [3, -0.0133333, 0], [3, 0.346667, 0]], [0.174533, [3, -0.346667, 0], [3, 0.373333, 0]], [0.34383, [3, -0.373333, 0], [3, 0.413333, 0]], [0.247837, [3, -0.413333, 0], [3, 0.386667, 0]], [0.403171, [3, -0.386667, 0], [3, 0.4, 0]], [0.324631, [3, -0.4, 0], [3, 0.4, 0]], [0.476475, [3, -0.4, -0.0348228], [3, 0.333333, 0.029019]], [0.516157, [3, -0.333333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.04, 8])
	keys.append([[1.23756, [3, -0.0133333, 0], [3, 2.65333, 0]], [1.23756, [3, -2.65333, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.04, 8])
	keys.append([[0.603383, [3, -0.0133333, 0], [3, 2.65333, 0]], [0.603383, [3, -2.65333, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.04, 8])
	keys.append([[1.55817, [3, -0.0133333, 0], [3, 2.65333, 0]], [1.55817, [3, -2.65333, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.04, 1.08, 8])
	keys.append([[-0.149224, [3, -0.0133333, 0], [3, 0.346667, 0]], [-0.148353, [3, -0.346667, 0], [3, 2.30667, 0]], [-0.149224, [3, -2.30667, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.04, 8])
	keys.append([[-0.00262618, [3, -0.0133333, 0], [3, 2.65333, 0]], [-0.00262618, [3, -2.65333, 0], [3, 0, 0]]])

	motion.post.angleInterpolationBezier(names, times, keys)
	
def slow_breath(motion):
	names = list()
	times = list()
	keys = list()

	names.append("HeadPitch")
	times.append([0.04, 1.76, 3.4, 4.8, 6.4, 8, 9.6, 11.32])
	keys.append([[-0.205731, [3, -0.0133333, 0], [3, 0.573333, 0]], [-0.287979, [3, -0.573333, 0], [3, 0.546667, 0]], [-0.0977384, [3, -0.546667, 0], [3, 0.466667, 0]], [-0.219911, [3, -0.466667, 0], [3, 0.533333, 0]], [-0.0925025, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.268781, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.146608, [3, -0.533333, 0], [3, 0.573333, 0]], [-0.205731, [3, -0.573333, 0], [3, 0, 0]]])

	names.append("HeadYaw")
	times.append([0.04, 11.32])
	keys.append([[-0.00499766, [3, -0.0133333, 0], [3, 3.76, 0]], [-0.00542581, [3, -3.76, 0], [3, 0, 0]]])

	names.append("HipPitch")
	times.append([0.04, 1.76, 3.4, 4.8, 6.4, 8, 9.6, 11.32])
	keys.append([[-0.0286182, [3, -0.0133333, 0], [3, 0.573333, 0]], [-0.146608, [3, -0.573333, 0], [3, 0.546667, 0]], [0.00349066, [3, -0.546667, 0], [3, 0.466667, 0]], [-0.151844, [3, -0.466667, 0], [3, 0.533333, 0]], [0.010472, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.195477, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.015708, [3, -0.533333, 0], [3, 0.573333, 0]], [-0.0414414, [3, -0.573333, 0], [3, 0, 0]]])

	names.append("HipRoll")
	times.append([0.04, 11.32])
	keys.append([[-0.00136429, [3, -0.0133333, 0], [3, 3.76, 0]], [-0.00136429, [3, -3.76, 0], [3, 0, 0]]])

	names.append("KneePitch")
	times.append([0.04, 1.76, 6.4, 8, 9.6, 11.32])
	keys.append([[-0.00724806, [3, -0.0133333, 0], [3, 0.573333, 0]], [-0.0401426, [3, -0.573333, 0], [3, 1.54667, 0]], [-0.0331613, [3, -1.54667, -0.00698132], [3, 0.533333, 0.00240735]], [0.020944, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.015708, [3, -0.533333, 0.00207248], [3, 0.573333, -0.00222791]], [-0.0179359, [3, -0.573333, 0], [3, 0, 0]]])

	names.append("LElbowRoll")
	times.append([0.04, 1.76, 3.4, 4.8, 6.4, 8, 9.6, 11.32])
	keys.append([[-0.515705, [3, -0.0133333, 0], [3, 0.573333, 0]], [-0.267035, [3, -0.573333, 0], [3, 0.546667, 0]], [-0.357792, [3, -0.546667, 0], [3, 0.466667, 0]], [-0.244346, [3, -0.466667, 0], [3, 0.533333, 0]], [-0.404916, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.303687, [3, -0.533333, 0], [3, 0.533333, 0]], [-0.511381, [3, -0.533333, 0.00402159], [3, 0.573333, -0.00432321]], [-0.515705, [3, -0.573333, 0], [3, 0, 0]]])

	names.append("LElbowYaw")
	times.append([0.04, 11.32])
	keys.append([[-1.23334, [3, -0.0133333, 0], [3, 3.76, 0]], [-1.23334, [3, -3.76, 0], [3, 0, 0]]])

	names.append("LHand")
	times.append([0.04, 11.32])
	keys.append([[0.603383, [3, -0.0133333, 0], [3, 3.76, 0]], [0.603383, [3, -3.76, 0], [3, 0, 0]]])

	names.append("LShoulderPitch")
	times.append([0.04, 11.32])
	keys.append([[1.55309, [3, -0.0133333, 0], [3, 3.76, 0]], [1.55309, [3, -3.76, 0], [3, 0, 0]]])

	names.append("LShoulderRoll")
	times.append([0.04, 11.32])
	keys.append([[0.144523, [3, -0.0133333, 0], [3, 3.76, 0]], [0.144376, [3, -3.76, 0], [3, 0, 0]]])

	names.append("LWristYaw")
	times.append([0.04, 11.32])
	keys.append([[0.00150524, [3, -0.0133333, 0], [3, 3.76, 0]], [0.00150524, [3, -3.76, 0], [3, 0, 0]]])

	names.append("RElbowRoll")
	times.append([0.04, 1.76, 3.4, 4.8, 6.4, 8, 9.6, 11.32])
	keys.append([[0.516157, [3, -0.0133333, 0], [3, 0.573333, 0]], [0.174533, [3, -0.573333, 0], [3, 0.546667, 0]], [0.34383, [3, -0.546667, 0], [3, 0.466667, 0]], [0.247837, [3, -0.466667, 0], [3, 0.533333, 0]], [0.403171, [3, -0.533333, 0], [3, 0.533333, 0]], [0.324631, [3, -0.533333, 0], [3, 0.533333, 0]], [0.476475, [3, -0.533333, -0.0307671], [3, 0.573333, 0.0330747]], [0.516157, [3, -0.573333, 0], [3, 0, 0]]])

	names.append("RElbowYaw")
	times.append([0.04, 11.32])
	keys.append([[1.23756, [3, -0.0133333, 0], [3, 3.76, 0]], [1.23756, [3, -3.76, 0], [3, 0, 0]]])

	names.append("RHand")
	times.append([0.04, 11.32])
	keys.append([[0.603383, [3, -0.0133333, 0], [3, 3.76, 0]], [0.603383, [3, -3.76, 0], [3, 0, 0]]])

	names.append("RShoulderPitch")
	times.append([0.04, 11.32])
	keys.append([[1.55817, [3, -0.0133333, 0], [3, 3.76, 0]], [1.55817, [3, -3.76, 0], [3, 0, 0]]])

	names.append("RShoulderRoll")
	times.append([0.04, 1.76, 11.32])
	keys.append([[-0.149224, [3, -0.0133333, 0], [3, 0.573333, 0]], [-0.148353, [3, -0.573333, 0], [3, 3.18667, 0]], [-0.149224, [3, -3.18667, 0], [3, 0, 0]]])

	names.append("RWristYaw")
	times.append([0.04, 11.32])
	keys.append([[-0.00262618, [3, -0.0133333, 0], [3, 3.76, 0]], [-0.00262618, [3, -3.76, 0], [3, 0, 0]]])

	motion.post.angleInterpolationBezier(names, times, keys)
